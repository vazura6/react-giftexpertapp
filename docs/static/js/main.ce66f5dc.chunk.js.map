{"version":3,"sources":["Components/AddCategory.js","Helpers/getGifs.js","Components/GifGridItem.js","Components/GifGrid.js","hooks/useFetchGifts.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifts","imagen","GifExpertApp","props","categories","ReactDOM","render","document","getElementById"],"mappings":"yMAIaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAqB9C,OACE,sBAAMC,SAda,SAACC,GAElBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,MAQpB,SACE,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAnBhB,SAAEP,GACxBF,EAAcE,EAAEQ,OAAOF,a,+BCPlBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAUH,GAF9C,+DAIAI,MAAOF,GAJP,cAIbG,EAJa,gBAMIA,EAAKC,OANT,uBAMXC,EANW,EAMXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAZvB,kBAiBZM,GAjBY,4CAAH,sDCAPO,EAAc,SAAC,GAAsB,IAAnBH,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAElC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,4BAAKA,QCFJO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECFV,SAAEA,GAAc,IAAD,EAChBd,mBAAS,CACjCqB,KAAM,GACNa,SAAS,IAH+B,mBACnCC,EADmC,KAC5BC,EAD4B,KAe1C,OATAC,qBAAU,WACRxB,EAAQC,GAAUwB,MAAK,SAACC,GACtBH,EAAS,CACPf,KAAMkB,EACNL,SAAS,SAGZ,CAACpB,IAEGqB,EDX2BK,CAAe1B,GAAlCa,EAFsB,EAE5BN,KAAca,EAFc,EAEdA,QAErB,OACE,qCACE,qBAAIJ,UAAU,oCAAd,cAAoDhB,EAApD,OAEEoB,GAAW,mBAAGJ,UAAU,mCAAb,6BAEb,qBAAKA,UAAU,YAAf,SACGH,EAAOJ,KAAI,SAACkB,GAAD,OACV,cAAC,EAAD,eAAiCA,GAAfA,EAAOhB,aEctBiB,EA3BM,SAAAC,GAAU,IAAD,EAEU3C,mBAAS,CAAC,gBAFpB,mBAEnB4C,EAFmB,KAEP7C,EAFO,KAI1B,OACI,qCACI,8CAEA,cAAC,EAAD,CAAaA,cAAiBA,IAE9B,uBACA,6BAEQ6C,EAAWrB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAYA,GADLA,Y,MCZnC+B,IAASC,OACT,cAAC,EAAD,IACEC,SAASC,eAAe,W","file":"static/js/main.ce66f5dc.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport const AddCategory = ( {setCategories} ) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('');\r\n    \r\n    const handleInputChange = ( e ) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        \r\n        e.preventDefault();\r\n\r\n        if ( inputValue.trim().length > 2) {\r\n            setCategories( cats => [inputValue, ...cats  ] );\r\n            setInputValue('');\r\n        } else {\r\n            return;\r\n        }        \r\n        \r\n    }\r\n\r\n    return (\r\n      <form onSubmit={handleSubmit}>\r\n        <input type=\"text\" value={inputValue} onChange={handleInputChange} />\r\n      </form>\r\n    );\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory\r\n","\r\n\r\nexport const getGifs = async ( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=KB6PQlaaw3cjENaL8T4ILwt8frxvTm88`;\r\n\r\n    const resp = await fetch( url );\r\n\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    }\r\n    );\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( { title, url } ) => {\r\n            \r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={ url } alt={ title }/>\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifts } from '../hooks/useFetchGifts';\r\n// import { getGifs } from '../Helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data: images, loading} = useFetchGifts( category );\r\n\r\n    return (\r\n      <>\r\n        <h3 className=\"animate__animated animate__fadeIn\"> {category} </h3>\r\n\r\n        { loading && <p className=\"animate__animated animate__flash\">Loading........</p> }\r\n\r\n        <div className=\"card-grid\">\r\n          {images.map((imagen) => (\r\n            <GifGridItem key={imagen.id} {...imagen} />\r\n          ))}\r\n        </div>\r\n      </>\r\n    );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from \"../Helpers/getGifs\";\r\n\r\nexport const useFetchGifts = ( category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category).then((imgs) => {\r\n      setState({\r\n        data: imgs,\r\n        loading: false,\r\n      });\r\n    });\r\n  }, [category]);\r\n\r\n  return state;\r\n}","import React, {useState} from 'react'\r\nimport { AddCategory } from './Components/AddCategory';\r\nimport { GifGrid } from './Components/GifGrid';\r\n\r\nconst GifExpertApp = props => {\r\n\r\n    const [categories, setCategories] = useState(['Dragon Ball']);\r\n   \r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n\r\n            <AddCategory setCategories = {setCategories} />\r\n\r\n            <hr />\r\n            <ol>\r\n                {\r\n                    categories.map( category => (\r\n                        <GifGrid \r\n                            key = {category}\r\n                            category = {category}\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n<GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}